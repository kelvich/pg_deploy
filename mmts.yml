- hosts: all

#   vars:
#     pg_port: 15432
#     pg_prefix: "{{ansible_env.HOME}}/pg_cluster"
#     pg_src: "{{pg_prefix}}/src"
#     pg_dst: "{{pg_prefix}}/install"
#     pg_datadir: "{{pg_prefix}}/data_{{pg_port}}"
#     pg_repo: https://github.com/postgrespro/postgres_cluster.git
#     pg_version_tag: master
#     pg_destroy_and_init: true
#     makejobs: 4

###############################################################

  tasks:

  - include: provision.yml

  - name: stop postgres if it was running
    shell: "pkill -9 postgres || true"
    when: pg_destroy_and_init

  - name: remove datadirs on datanodes
    command: "rm -rf {{pg_datadir}}"
    when: pg_destroy_and_init

  - name: create datadirs on datanodes
    command: "{{pg_dst}}/bin/initdb {{pg_datadir}}"
    environment:
      LD_LIBRARY_PATH: "{{pg_dst}}/lib/"
    args:
      creates: "{{pg_datadir}}"

  - name: generate mmts connstrings
    set_fact:
      connstr: "host={{item}} user={{ansible_ssh_user}} port={{pg_port}} dbname=postgres"
      raft_connstr: "{{ hostvars[item]['node_id'] }}:{{item}}:5555"
    with_items:
      "{{ groups['nodes'] | reverse | batch(nnodes | d(3) | int) | first }}"
    register: connstrs

  - name: collect raftable connstrings
    set_fact:
      mm_connstr: "{{ connstrs.results | map(attribute='ansible_facts.connstr') | join(', ') }}"
      raft_connstr: "{{ connstrs.results | map(attribute='ansible_facts.raft_connstr') | join(', ') }}"

  - name: configure postgres on datanodes
    lineinfile:
      dest: "{{pg_datadir}}/postgresql.conf"
      line: "{{item}}"
      state: present
    with_items:
    - "listen_addresses = '*'"
    - "max_prepared_transactions = 800"
    - "shared_buffers = 3GB"
    - "max_connections = 2048"
    - "port = {{pg_port}}"
    - "synchronous_commit = off"
    - "wal_level = logical"
    - "max_worker_processes = 15"
    - "max_replication_slots = 10"
    - "max_wal_senders = 10"
    - "max_worker_processes = 30"
    - "log_checkpoints = on"
    - "log_autovacuum_min_duration = 0"
    - "shared_preload_libraries = 'raftable, multimaster'"
    - "#default_transaction_isolation = 'repeatable read'"
    - "raftable.id = {{ node_id }}"
    - "raftable.peers = '{{ raft_connstr }}'"
    - "multimaster.workers = 20"
    - "multimaster.arbiter_port = {{ 7777 }}"
    - "multimaster.use_raftable = true"
    - "multimaster.queue_size=528576000"
    - "multimaster.ignore_tables_without_pk = 1"
    - "multimaster.node_id = {{ node_id }}"
    - "multimaster.conn_strings = '{{ mm_connstr }}'"
    - "multimaster.heartbeat_recv_timeout = 1000"
    - "multimaster.heartbeat_send_timeout = 250"
    - "multimaster.twopc_min_timeout = 40000"

  - name: enable blind trust on datanodes
    lineinfile:
      dest: "{{pg_datadir}}/pg_hba.conf"
      line: "{{item}}"
      state: present
    with_items:
      - "host all all 0.0.0.0/0 trust"
      - "host replication all 0.0.0.0/0 trust"
      - "local replication all trust"

  - name: start postgrespro
    shell: "ulimit -c unlimited && {{pg_dst}}/bin/pg_ctl start -w -D {{pg_datadir}} -l {{pg_datadir}}/pg.log"
    environment:
      LD_LIBRARY_PATH: "{{pg_dst}}/lib/"

