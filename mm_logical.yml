- hosts: all

  tasks:

  - include: provision.yml

  ###############################################################

  - name: clone pglogical_output
    git: repo=https://github.com/2ndQuadrant/pglogical.git
      dest={{pg_prefix}}/pglogical_output
      version=pglogical_output
      depth=1
      accept_hostkey=True
      force=True

  - name: clone pglogical
    git: repo=https://github.com/2ndQuadrant/pglogical.git
      dest={{pg_prefix}}/pglogical
      version=pglogical
      depth=1
      accept_hostkey=True
      recursive=No
      force=True

  - name: build pglogical_output
    make:
      chdir: "{{pg_prefix}}/pglogical_output"
      target: install
    environment:
      PATH: "{{pg_dst}}/bin/:{{ ansible_env.PATH }}"

  - name: build pglogical
    make:
      chdir: "{{pg_prefix}}/pglogical"
      target: install
    environment:
      PATH: "{{pg_dst}}/bin/:{{ ansible_env.PATH }}"

  ###############################################################

  - name: stop postgres if it was running
    shell: "pkill -9 postgres || true"

  - name: remove datadirs on datanodes
    command: "rm -rf {{pg_datadir}}"

  - name: create datadirs on datanodes
    command: "{{pg_dst}}/bin/initdb {{pg_datadir}}"
    environment:
      LD_LIBRARY_PATH: "{{pg_dst}}/lib/"

  - name: configure postgres on datanodes
    lineinfile:
      dest: "{{pg_datadir}}/postgresql.conf"
      line: "{{item}}"
      state: present
    with_items:
    - "listen_addresses = '*'"
    - "max_prepared_transactions = 800"
    - "shared_buffers = 3GB"
    - "max_connections = 2048"
    - "port = {{pg_port}}"
    - "synchronous_commit = off"
    - "wal_level = logical"
    - "max_worker_processes = 15"
    - "max_replication_slots = 10"
    - "max_wal_senders = 10"
    - "max_worker_processes = 30"
    - "shared_preload_libraries = 'pglogical'"

  - name: enable blind trust on datanodes
    lineinfile:
      dest: "{{pg_datadir}}/pg_hba.conf"
      line: "{{item}}"
      state: present
    with_items:
      - "host all all 0.0.0.0/0 trust"
      - "host replication all 0.0.0.0/0 trust"
      - "local replication all trust"

  - name: start postgres
    shell: "ulimit -c unlimited && {{pg_dst}}/bin/pg_ctl start -w -D {{pg_datadir}} -l {{pg_datadir}}/pg.log"
    environment:
      LD_LIBRARY_PATH: "{{pg_dst}}/lib/"

  - name: pgbench init
    command: "{{pg_dst}}/bin/pgbench -i -p {{pg_port}} postgres" 

- hosts: nodes[0]

  tasks:

  - name: create master node
    shell: |
      psql -p {{pg_port}} postgres <<-SQL
        CREATE EXTENSION pglogical;
        SELECT pglogical.create_node(
          node_name := 'provider',
          dsn := 'port={{pg_port}} dbname=postgres'
        );
        SELECT pglogical.replication_set_add_table('default', 'pgbench_accounts');
      SQL
    environment:
      PATH: "{{pg_dst}}/bin/:{{ ansible_env.PATH }}"

- hosts: nodes[1:]

  tasks:

  - name: create master node
    shell: |
      psql -p {{pg_port}} postgres <<-SQL
        CREATE EXTENSION pglogical;
        SELECT pglogical.create_node(
          node_name := 'subscriber',
          dsn := 'port={{pg_port}} dbname=postgres'
        );
        SELECT pglogical.create_subscription(
          subscription_name := 'subscription_{{ ansible_hostname }}',
          provider_dsn := 'port={{pg_port}} dbname=postgres host=192.168.27.21', --!!!
          synchronize_data := true,
          forward_origins := '{}',
          synchronize_structure := false
        );
      SQL
    environment:
      PATH: "{{pg_dst}}/bin/:{{ ansible_env.PATH }}"
